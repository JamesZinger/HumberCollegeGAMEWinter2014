#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;

// Output data ; will be interpolated for each fragment.
out vec3 c_Normal;

out vec3 c_VertPos;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;
uniform mat4 M;
uniform mat4 V;

void main(){

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);
		
	c_Normal = (V * M * vec4(vertexNormal_modelspace,0)).xyz;

	c_VertPos = (V * M * vec4(vertexPosition_modelspace,1)).xyz;
}

